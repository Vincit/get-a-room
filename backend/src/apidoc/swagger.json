{
  "openapi" : "3.0.0",
  "servers" : [ {
    "description" : "The staging environment",
    "url" : "https://oispahuone.com/api"
  } ],
  "info" : {
    "description" : "This is the API for get a room backend",
    "version" : "0.3.0",
    "title" : "Get a room! API",
    "contact" : {
      "email" : "mikko.m.pirhonen@tuni.fi"
    },
    "license" : {
      "name" : "MIT License",
      "url" : "https://opensource.org/licenses/MIT"
    }
  },
  "tags" : [ {
    "name" : "preferences"
  }, {
    "name" : "bookings"
  }, {
    "name" : "authorization"
  } ],
  "paths" : {
    "/preferences" : {
      "get" : {
        "tags" : [ "preferences" ],
        "summary" : "Get preferences for the user",
        "operationId" : "getPreferences",
        "description" : "The current user is resolved from the request and the corresponding preferences are returned\n",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/preferences"
                }
              }
            }
          },
          "401" : {
            "description" : "User was not authenticated"
          }
        }
      },
      "put" : {
        "tags" : [ "preferences" ],
        "summary" : "Replace preferences for the user",
        "operationId" : "updatePreferences",
        "description" : "The current user is resolved from the request and the corresponding preferences are updated\n",
        "requestBody" : {
          "description" : "The new preferences",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/preferences"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The updated preferences",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/preferences"
                }
              }
            }
          },
          "400" : {
            "description" : "The preference object was malformed"
          },
          "401" : {
            "description" : "The user was not authenticated"
          }
        }
      }
    },
    "/booking" : {
      "post" : {
        "tags" : [ "bookings" ],
        "summary" : "Make a booking",
        "operationId" : "makeBooking",
        "description" : "The selected resource is booked with the details specified in the request body and  the current user\n",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/bookingDetails"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The new booking",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/booking"
                }
              }
            }
          },
          "400" : {
            "description" : "The bookingDetails object was malformed"
          },
          "401" : {
            "description" : "The user was not authenticated"
          },
          "409" : {
            "description" : "The room was no longer available for the booking"
          }
        }
      }
    },
    "/booking/current" : {
      "get" : {
        "tags" : [ "bookings" ],
        "summary" : "Get the status of the current booking of the user",
        "operationId" : "getCurrentBooking",
        "description" : "Current booking is a booking that is currently ongoing.\n",
        "responses" : {
          "200" : {
            "description" : "The current booking",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/booking"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "The user was not authenticated"
          }
        }
      }
    },
    "/booking/{bookingId}" : {
      "parameters" : [ {
        "name" : "bookingId",
        "in" : "path",
        "description" : "ID of the booking",
        "required" : true,
        "schema" : {
          "$ref" : "#/components/schemas/bookingId"
        }
      } ],
      "get" : {
        "tags" : [ "bookings" ],
        "summary" : "Get details for a booking",
        "operationId" : "getBooking",
        "description" : "Get details of a booking by it's id\n",
        "responses" : {
          "200" : {
            "description" : "The booking",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/booking"
                }
              }
            }
          },
          "401" : {
            "description" : "The user was not authenticated"
          },
          "404" : {
            "description" : "Booking not found"
          }
        }
      },
      "delete" : {
        "tags" : [ "bookings" ],
        "summary" : "Delete a booking",
        "operationId" : "deleteBooking",
        "description" : "Delete a booking by it's id\n",
        "responses" : {
          "202" : {
            "description" : "Booking was deleted successfully"
          },
          "401" : {
            "description" : "The user was not authenticated"
          },
          "404" : {
            "description" : "Booking not found or already deleted"
          }
        }
      }
    },
    "/booking/{bookingId}/addTime" : {
      "parameters" : [ {
        "name" : "bookingId",
        "in" : "path",
        "description" : "ID of the booking to update",
        "required" : true,
        "schema" : {
          "$ref" : "#/components/schemas/bookingId"
        }
      } ],
      "patch" : {
        "tags" : [ "bookings" ],
        "summary" : "Add time to a booking",
        "operationId" : "addTimeToBooking",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/addTimeDetails"
              }
            }
          }
        },
        "description" : "Adds the specified time to a booking\n",
        "responses" : {
          "200" : {
            "description" : "The modified booking",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/booking"
                }
              }
            }
          },
          "401" : {
            "description" : "The user was not authenticated"
          },
          "403" : {
            "description" : "The user was not authorized to add time for this booking"
          }
        }
      }
    },
    "/rooms" : {
      "get" : {
        "tags" : [ "bookings" ],
        "parameters" : [ {
          "name" : "building",
          "in" : "query",
          "description" : "Building to filter by",
          "required" : false,
          "schema" : {
            "$ref" : "#/components/schemas/buildingId"
          }
        }, {
          "name" : "showReserved",
          "in" : "query",
          "description" : "Should reserved rooms be included",
          "required" : false,
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        } ],
        "summary" : "Get rooms",
        "operationId" : "getAvailableRooms",
        "description" : "By default gets free (not currently in use) rooms from all buildings.\nCan be altered to limit to one building or to get reserved rooms as well. \n",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/room"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "The user was not authenticated"
          }
        }
      }
    },
    "/buildings" : {
      "get" : {
        "tags" : [ "preferences" ],
        "summary" : "Get available buildings",
        "operationId" : "getBuildings",
        "description" : "Conference rooms are located in buildings.\nBuildings can be used to group rooms\n",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/building"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "The user was not authenticated"
          }
        }
      }
    },
    "/auth/google" : {
      "get" : {
        "tags" : [ "authorization" ],
        "summary" : "Authenticate the user",
        "operationId" : "authenticateUser",
        "description" : "Redirects to a google login page in which the user is authenticated with google\n\nAfter google login, the backend uses the google provided token to retrieve details\nabout the google user and creates a new user in the database if one does not exist.\n",
        "responses" : {
          "302" : {
            "description" : "Redirect to app after successful authentication, or redirect to\nlogin after unsuccesful authentication.\n"
          }
        }
      }
    },
    "/auth/logout" : {
      "get" : {
        "tags" : [ "authorization" ],
        "summary" : "Logout the user",
        "operationId" : "logoutUser",
        "description" : "Empties the authentication cookies from the user, causing following\nrequests to fail.\n",
        "responses" : {
          "200" : {
            "description" : "Cookies have been emptied.\n"
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "roomId" : {
        "type" : "string",
        "format" : "email",
        "example" : "c_188fib500s84uis7kcpb6dfm93v25@resource.calendar.google.com"
      },
      "buildingId" : {
        "type" : "string",
        "example" : "Hermia 5"
      },
      "bookingId" : {
        "type" : "string",
        "example" : "13223534"
      },
      "room" : {
        "type" : "object",
        "required" : [ "id", "name" ],
        "properties" : {
          "id" : {
            "$ref" : "#/components/schemas/roomId"
          },
          "name" : {
            "type" : "string",
            "example" : "Small meeting room 1"
          },
          "capacity" : {
            "type" : "number",
            "example" : 12
          },
          "features" : {
            "type" : "array",
            "example" : [ "Shark tank", "TV" ],
            "items" : {
              "type" : "string"
            }
          },
          "nextCalendarEvent" : {
            "type" : "string",
            "format" : "date-time",
            "example" : "2021-10-21T17:32:28Z",
            "description" : "Time when the room is no longer available"
          }
        }
      },
      "building" : {
        "type" : "object",
        "required" : [ "id", "name" ],
        "properties" : {
          "id" : {
            "$ref" : "#/components/schemas/buildingId"
          },
          "name" : {
            "type" : "string",
            "example" : "Hermia 5"
          }
        }
      },
      "preferences" : {
        "type" : "object",
        "required" : [ "building" ],
        "properties" : {
          "building" : {
            "$ref" : "#/components/schemas/building"
          }
        }
      },
      "bookingDetails" : {
        "type" : "object",
        "required" : [ "duration", "title", "roomId" ],
        "properties" : {
          "duration" : {
            "type" : "number",
            "description" : "Duration of booking in minutes",
            "example" : 60
          },
          "title" : {
            "type" : "string",
            "example" : "Weekly software meeting"
          },
          "roomId" : {
            "$ref" : "#/components/schemas/roomId"
          }
        }
      },
      "booking" : {
        "type" : "object",
        "required" : [ "id", "startTime", "endTime", "room" ],
        "properties" : {
          "id" : {
            "$ref" : "#/components/schemas/bookingId"
          },
          "startTime" : {
            "type" : "string",
            "format" : "date-time",
            "example" : "2021-10-21T17:32:28Z"
          },
          "endTime" : {
            "type" : "string",
            "format" : "date-time",
            "example" : "2021-10-21T19:32:28Z"
          },
          "room" : {
            "$ref" : "#/components/schemas/room"
          }
        }
      },
      "addTimeDetails" : {
        "type" : "object",
        "required" : [ "timeToAdd" ],
        "properties" : {
          "timeToAdd" : {
            "type" : "number",
            "description" : "Time to add to booking",
            "example" : 15
          }
        }
      }
    }
  }
}